package Assignment_8;

import java.util.Scanner;

public class Main 

{
    public static void main(String[] args) 
    {
        Scanner sc = new Scanner(System.in);
        StudentManager manager = new StudentManager();
        int choice;

        do{
            System.out.println("\n===== Student Data Entry Menu =====");
            System.out.println("1. Add Student");
            System.out.println("2. Display All Students");
            System.out.println("3. Search by PRN");
            System.out.println("4. Search by Name");
            System.out.println("5. Search by Position");
            System.out.println("6. Update Student");
            System.out.println("7. Delete Student");
            System.out.println("8. Exit");
            System.out.print("Enter your choice: ");

            choice = sc.nextInt();
            sc.nextLine();  // Consume newline

            try{
                switch(choice){
                    case 1 -> manager.addStudent(sc);
                    case 2 -> manager.displayStudents();
                    case 3 -> manager.searchByPRN(sc);
                    case 4 -> manager.searchByName(sc);
                    case 5 -> manager.searchByPosition(sc);
                    case 6 -> manager.updateStudent(sc);
                    case 7 -> manager.deleteStudent(sc);
                    case 8 -> System.out.println("Exiting program.");
                    default -> System.out.println("Invalid choice! Please try again.");
                }

            } catch (InvalidDataException | StudentNotFoundException e){
                System.out.println("Error: " + e.getMessage());
            }

        } while(choice != 8);

        sc.close();
    }
}



package Assignment_8;

public class Student 
{
    private String prn;
    private String name;
    private String dob;
    private float marks;

    //constructor
    public Student(String prn, String name, String dob, float marks){
        this.prn = prn;
        this.name = name;
        this.dob = dob;
        this.marks = marks;
    }

    //getters 
    public String getPrn(){ 
        return prn; 
    }

    public String getName(){ 
        return name; 
    }

    public String getDob(){ 
        return dob; 
    }

    public float getMarks(){ 
        return marks; 
    }

    //setters
    public void setName(String name){ 
        this.name = name; 
    }

    public void setDob(String dob){ 
        this.dob = dob; 
    }

    public void setMarks(float marks){
        this.marks = marks; 
    }

    //display method
    public void display(){
        System.out.println("PRN: " + prn + ", Name: " + name + ", DoB: " + dob + ", Marks: " + marks);
    }
}



package Assignment_8;

import java.util.*;

public class StudentManager 
{
    private final ArrayList<Student> students = new ArrayList<>();

    //Add new student
    public void addStudent(Scanner sc) throws InvalidDataException 
    {
        System.out.print("Enter PRN: ");
        String prn = sc.nextLine();
        System.out.print("Enter Name: ");
        String name = sc.nextLine();
        System.out.print("Enter DoB: ");
        String dob = sc.nextLine();
        System.out.print("Enter Marks: ");
        float marks = sc.nextFloat();
        sc.nextLine();

        if(prn.isEmpty() || name.isEmpty() || marks < 0 || marks > 100) {
            throw new InvalidDataException("Invalid data provided for student.");
        }

        students.add(new Student(prn, name, dob, marks));
        System.out.println("Student added successfully.");
    }

    //Display all students
    public void displayStudents() 
    {
        if(students.isEmpty()) {
            System.out.println("No students to display.");
        } 
        
        else 
        {
            for(Student s : students) {
                s.display();
            }
        }
    }

    //Search by PRN
    public void searchByPRN(Scanner sc) throws StudentNotFoundException 
    {
        System.out.print("Enter PRN to search: ");
        String prn = sc.nextLine();

        for(Student s : students) 
        {
            if(s.getPrn().equalsIgnoreCase(prn)){
                s.display();
                return;
            }
        }

        throw new StudentNotFoundException("No student found with PRN: " + prn);
    }

    //Search by Name
    public void searchByName(Scanner sc) throws StudentNotFoundException 
    {
        System.out.print("Enter name to search: ");
        String name = sc.nextLine();
        boolean found = false;

        for(Student s : students) 
        {
            if(s.getName().equalsIgnoreCase(name)) {
                s.display();
                found = true;
            }
        }

        if(!found) throw new StudentNotFoundException("No student found with name: " + name);
    }

    //Search by position
    public void searchByPosition(Scanner sc) throws StudentNotFoundException 
    {
        System.out.print("Enter position(0 to " +(students.size() - 1) + "): ");
        int pos = sc.nextInt();
        sc.nextLine();

        if(pos < 0 || pos >= students.size()) {
            throw new StudentNotFoundException("Invalid position entered.");
        }

        students.get(pos).display();
    }

    //Update student
    public void updateStudent(Scanner sc) throws StudentNotFoundException, InvalidDataException 
    {
        System.out.print("Enter PRN of student to update: ");
        String prn = sc.nextLine();

        for(Student s : students) 
        {
            if(s.getPrn().equalsIgnoreCase(prn)) 
            {
                System.out.print("Enter new name: ");
                String name = sc.nextLine();
                System.out.print("Enter new DoB: ");
                String dob = sc.nextLine();
                System.out.print("Enter new marks: ");
                float marks = sc.nextFloat();
                sc.nextLine();

                if(name.isEmpty() || marks < 0 || marks > 100) {
                    throw new InvalidDataException("Invalid updated data.");
                }

                s.setName(name);
                s.setDob(dob);
                s.setMarks(marks);
                System.out.println("Student updated successfully.");
                return;
            }
        }

        throw new StudentNotFoundException("Student with PRN " + prn + " not found.");
    }

    //Delete student
    public void deleteStudent(Scanner sc) throws StudentNotFoundException 
    {
        System.out.print("Enter PRN of student to delete: ");
        String prn = sc.nextLine();

        Iterator<Student> iterator = students.iterator();

        while(iterator.hasNext()) 
        {
            Student s = iterator.next();
            
            if(s.getPrn().equalsIgnoreCase(prn)){
                iterator.remove();
                System.out.println("Student deleted successfully.");
                return;
            }
        }

        throw new StudentNotFoundException("Student with PRN " + prn + " not found.");
    }
}



package Assignment_8;

public class InvalidDataException extends Exception
{
    public InvalidDataException(String message){
        super(message);
    }
}



package Assignment_8;

public class StudentNotFoundException extends Exception 
{
    public StudentNotFoundException(String message){
        super(message);
    }
}

